name: On-Release
on:
  release:
    types: [released]

  workflow_dispatch:

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.5
          cache: 'pnpm'

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: ${{ github.ref_name }}
      - run: pnpm install

      - run: npx nx affected -t build --parallel=3 --configuration=production

      - uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@master
        continue-on-error: true
        with:
          name: dist
          path: dist
          if-no-files-found: warn

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: pnpm/action-setup@v3

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.5
          cache: 'pnpm'

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: ${{ github.ref_name }}
      - run: pnpm install

      - name: 'Build images'
        run: npx nx affected --target=container --parallel=2
        env:
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
